<?php
namespace Examples;

use GuzzleHttp\Psr7\ServerRequest;
use Kyanag\Revter\Revter;
use Psr\Http\Message\RequestInterface;

class ExampleRevter extends Revter
{

    public function __construct()
    {
        parent::__construct();

    }

    public function trigger(string $name, $eventArgs)
    {
        echo "{$name}\n";
    }

    /**
     * @param array $request
     * @return mixed|null
     */
    public function handle($request)
    {
        $psr7Request = $this->createPsr7Request($request);
        return parent::handle($psr7Request); // TODO: Change the autogenerated stub
    }

    /**
     * @param \Throwable $e
     * @param RequestInterface $request
     * @param mixed $content
     * @return void
     */
    protected function handleException(\Throwable $e, $request, $content = [])
    {
        echo "失败: {$request->getMethod()}:{$request->getUri()}\n";
        echo "Exception: [" . get_class($e) . "] {$e->getMessage()}\n";
        echo "\n\n";
    }


    protected function createPsr7Request($request): \Psr\Http\Message\RequestInterface
    {
        $psr_request = new ServerRequest(
            $request['method'],
            $request['url'],
            $request['headers'],
            $request['body']
        );
        return $psr_request
            ->withAttribute("_task", $request);

    }
}